import boto3from flask import Flask, render_template, request, redirect, url_for, session, jsonifyfrom flask_cors import CORS  # Import CORSimport secretsapp = Flask(__name__)CORS(app)  # Allow requests from all originssecret_key = secrets.token_hex(32)app.secret_key = secret_keys3_client = boto3.client('s3')bucket_name = 'bucket935048'lambda_function_name = 'Assigndocumenttousers'# Dummy user data (replace with database integration)users = {    'Abhishek': 'Admin@123',    'Yash': 'Admin@123'}@app.route('/login', methods=['POST'])def login():    # Extract JSON data from the request    data = request.get_json()    # Check if the request JSON data contains 'username' and 'password'    if not data or 'username' not in data or 'password' not in data:        return jsonify({'error': 'Username or password missing'}), 400    username = data['username']    password = data['password']    # Verify username and password    if username in users and users[username] == password:        session['username'] = username        # Instead of redirecting, return a success message for API consistency        return jsonify({'success': 'Logged in successfully'}), 200    else:        return jsonify({'error': 'Invalid username or password'}), 400@app.route('/upload', methods=['POST'])def upload_file():    if 'file' not in request.files:        return jsonify({'error': 'No file provided'}), 400    file = request.files['file']    if file.filename == '':        return jsonify({'error': 'No file selected'}), 400    try:        # Upload file to S3 bucket        s3_client.upload_fileobj(file, bucket_name, file.filename)        # Generate pre-signed URL for the uploaded file        file_url = s3_client.generate_presigned_url('get_object', Params={'Bucket': bucket_name, 'Key': file.filename},                                                    ExpiresIn=3600)        return jsonify({'success': 'file uploaded to s3 bucket successfully', 'public_url': file_url}), 200    except Exception as e:        return jsonify({'error': str(e)}), 500@app.route('/dashboard')def dashboard():    username = session.get('username')    if username:        return render_template('dashboard.html', username=username)    else:        return redirect(url_for('login'))if __name__ == '__main__':    app.run(host='0.0.0.0', port=5001, debug=True)