import boto3import jsonimport ossns_client = boto3.client('sns')sqs_client = boto3.client('sqs')snstopic_name=os.getenv('SNS_Topic_Name')sqs_name=os.getenv('SQS_Service_Name')# sns_topic_arn = 'arn:aws:sns:us-east-1:654654451380:UsersWorkgroup'def lambda_handler(event, context):    # Retrieve messages from the SQS queue    # sqs_queue_url = 'https://sqs.us-east-1.amazonaws.com/654654451380/SQSQueue'    response = sqs_client.receive_message(QueueUrl=sqs_name, MaxNumberOfMessages=1)    # Check if there are any messages in the queue    if 'Messages' in response:        for message in response['Messages']:            # Extract URL from the message body            message_body = json.loads(message['Body'])            url = message_body['url']            # Send notification using SNS            notification_message = f"Access to the shared document is: {url}"            sns_client.publish(TopicArn=snstopic_name, Message=notification_message)            # # Delete the message from the SQS queue            # receipt_handle = message['ReceiptHandle']            # sqs_client.delete_message(QueueUrl=sqs_queue_url, ReceiptHandle=receipt_handle)            return {                'statusCode': 200,                'body': 'Notification sent successfully',                'headers':{                    'Content-Type': 'application/json',                    'Access-Control-Allow-Origin': '*',                    'Access-Control-Allow-Headers': 'Content-Type',                    'Access-Control-Allow-Methods': 'POST'                },            }    else:        return {            'statusCode': 200,            'body': 'No messages in the queue'        }